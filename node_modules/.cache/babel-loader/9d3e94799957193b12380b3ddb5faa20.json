{"ast":null,"code":"var _jsxFileName = \"/Users/akhila/lighthouse/portfolio/akhila499.github.io/src/components/Header.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Typography, Avatar, Grid, Box } from \"@material-ui/core\";\nimport avatar from \"../avatar.png\";\nimport Typed from \"typed.js\";\nimport { useEffect, useRef } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\"; //css styles\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst cssStyles = makeStyles(theme => ({\n  avatar: {\n    width: theme.spacing(15),\n    height: theme.spacing(15),\n    margin: theme.spacing(1)\n  },\n  title: {\n    color: \"#e6ba01\"\n  },\n  total: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%,-50%)\",\n    width: \"100vw\",\n    textAlign: \"center\",\n    zIndex: 1\n  },\n  sub: {\n    color: \"#fff\"\n  }\n}));\n\nconst Header = () => {\n  _s();\n\n  const el = useRef(null);\n  const el2 = useRef(null);\n  const classes = cssStyles();\n  useEffect(() => {\n    const typed = new Typed(el.current, {\n      strings: [\"Akhila Thota\"],\n      // Strings to display\n      // Speed settings, try diffrent values untill you get good results\n      startDelay: 300,\n      typeSpeed: 50,\n      backSpeed: 100,\n      backDelay: 100,\n      loop: false\n    });\n    const typed2 = new Typed(el2.current, {\n      strings: [\"Web Developer\", \"Front-end Developer\", \"Fullstack Developer\"],\n      // Strings to display\n      // Speed settings, try diffrent values untill you get good results\n      startDelay: 300,\n      typeSpeed: 50,\n      backSpeed: 100,\n      backDelay: 100,\n      loop: true\n    }); // Destropying\n\n    return () => {\n      typed.destroy();\n      typed2.destroy();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      className: classes.total,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        justifyContent: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Avatar, {\n          className: classes.avatar,\n          src: avatar,\n          alt: \"akhila\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.title,\n        variant: \"h4\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          ref: el\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.sub,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          ref: el2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Header, \"3tfef9+0Rk8FeQi9e4dJtg0kg1c=\");\n\n_c = Header;\nexport default Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/Users/akhila/lighthouse/portfolio/akhila499.github.io/src/components/Header.js"],"names":["React","Typography","Avatar","Grid","Box","avatar","Typed","useEffect","useRef","makeStyles","cssStyles","theme","width","spacing","height","margin","title","color","total","position","top","left","transform","textAlign","zIndex","sub","Header","el","el2","classes","typed","current","strings","startDelay","typeSpeed","backSpeed","backDelay","loop","typed2","destroy"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,MAArB,EAA6BC,IAA7B,EAAmCC,GAAnC,QAA8C,mBAA9C;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAASC,SAAT,EAAoBC,MAApB,QAAkC,OAAlC;AACA,SAASC,UAAT,QAA2B,0BAA3B,C,CAEA;;;;AACA,MAAMC,SAAS,GAAGD,UAAU,CAAEE,KAAD,KAAY;AACvCN,EAAAA,MAAM,EAAE;AACNO,IAAAA,KAAK,EAAED,KAAK,CAACE,OAAN,CAAc,EAAd,CADD;AAENC,IAAAA,MAAM,EAAEH,KAAK,CAACE,OAAN,CAAc,EAAd,CAFF;AAGNE,IAAAA,MAAM,EAAEJ,KAAK,CAACE,OAAN,CAAc,CAAd;AAHF,GAD+B;AAMvCG,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAE;AADF,GANgC;AASvCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE,UADL;AAELC,IAAAA,GAAG,EAAE,KAFA;AAGLC,IAAAA,IAAI,EAAE,KAHD;AAILC,IAAAA,SAAS,EAAE,sBAJN;AAKLV,IAAAA,KAAK,EAAE,OALF;AAMLW,IAAAA,SAAS,EAAE,QANN;AAOLC,IAAAA,MAAM,EAAE;AAPH,GATgC;AAkBvCC,EAAAA,GAAG,EAAE;AACHR,IAAAA,KAAK,EAAE;AADJ;AAlBkC,CAAZ,CAAD,CAA5B;;AAuBA,MAAMS,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAMC,EAAE,GAAGnB,MAAM,CAAC,IAAD,CAAjB;AACA,QAAMoB,GAAG,GAAGpB,MAAM,CAAC,IAAD,CAAlB;AACA,QAAMqB,OAAO,GAAGnB,SAAS,EAAzB;AACAH,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMuB,KAAK,GAAG,IAAIxB,KAAJ,CAAUqB,EAAE,CAACI,OAAb,EAAsB;AAClCC,MAAAA,OAAO,EAAE,CAAC,cAAD,CADyB;AACP;AAC3B;AACAC,MAAAA,UAAU,EAAE,GAHsB;AAIlCC,MAAAA,SAAS,EAAE,EAJuB;AAKlCC,MAAAA,SAAS,EAAE,GALuB;AAMlCC,MAAAA,SAAS,EAAE,GANuB;AAOlCC,MAAAA,IAAI,EAAE;AAP4B,KAAtB,CAAd;AASA,UAAMC,MAAM,GAAG,IAAIhC,KAAJ,CAAUsB,GAAG,CAACG,OAAd,EAAuB;AACpCC,MAAAA,OAAO,EAAE,CAAC,eAAD,EAAkB,qBAAlB,EAAyC,qBAAzC,CAD2B;AACsC;AAC1E;AACAC,MAAAA,UAAU,EAAE,GAHwB;AAIpCC,MAAAA,SAAS,EAAE,EAJyB;AAKpCC,MAAAA,SAAS,EAAE,GALyB;AAMpCC,MAAAA,SAAS,EAAE,GANyB;AAOpCC,MAAAA,IAAI,EAAE;AAP8B,KAAvB,CAAf,CAVc,CAoBd;;AACA,WAAO,MAAM;AACXP,MAAAA,KAAK,CAACS,OAAN;AACAD,MAAAA,MAAM,CAACC,OAAP;AACD,KAHD;AAID,GAzBQ,EAyBN,EAzBM,CAAT;AA0BA,sBACE;AAAA,2BACE,QAAC,GAAD;AAAK,MAAA,SAAS,EAAEV,OAAO,CAACX,KAAxB;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,cAAc,EAAC,QAA/B;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAEW,OAAO,CAACxB,MAA3B;AAAmC,UAAA,GAAG,EAAEA,MAAxC;AAAgD,UAAA,GAAG,EAAC;AAApD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,UAAD;AAAY,QAAA,SAAS,EAAEwB,OAAO,CAACb,KAA/B;AAAsC,QAAA,OAAO,EAAC,IAA9C;AAAA,+BACE;AAAM,UAAA,GAAG,EAAEW;AAAX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF,eAOE,QAAC,UAAD;AAAY,QAAA,SAAS,EAAEE,OAAO,CAACJ,GAA/B;AAAA,+BACE;AAAM,UAAA,GAAG,EAAEG;AAAX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAeD,CA7CD;;GAAMF,M;;KAAAA,M;AA+CN,eAAeA,MAAf","sourcesContent":["import React from \"react\";\nimport { Typography, Avatar, Grid, Box } from \"@material-ui/core\";\nimport avatar from \"../avatar.png\";\nimport Typed from \"typed.js\";\nimport { useEffect, useRef } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n//css styles\nconst cssStyles = makeStyles((theme) => ({\n  avatar: {\n    width: theme.spacing(15),\n    height: theme.spacing(15),\n    margin: theme.spacing(1),\n  },\n  title: {\n    color: \"#e6ba01\",\n  },\n  total: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%,-50%)\",\n    width: \"100vw\",\n    textAlign: \"center\",\n    zIndex: 1,\n  },\n  sub: {\n    color: \"#fff\",\n  },\n}));\n\nconst Header = () => {\n  const el = useRef(null);\n  const el2 = useRef(null);\n  const classes = cssStyles();\n  useEffect(() => {\n    const typed = new Typed(el.current, {\n      strings: [\"Akhila Thota\"], // Strings to display\n      // Speed settings, try diffrent values untill you get good results\n      startDelay: 300,\n      typeSpeed: 50,\n      backSpeed: 100,\n      backDelay: 100,\n      loop: false,\n    });\n    const typed2 = new Typed(el2.current, {\n      strings: [\"Web Developer\", \"Front-end Developer\", \"Fullstack Developer\"], // Strings to display\n      // Speed settings, try diffrent values untill you get good results\n      startDelay: 300,\n      typeSpeed: 50,\n      backSpeed: 100,\n      backDelay: 100,\n      loop: true,\n    });\n\n    // Destropying\n    return () => {\n      typed.destroy();\n      typed2.destroy();\n    };\n  }, []);\n  return (\n    <>\n      <Box className={classes.total}>\n        <Grid container justifyContent=\"center\">\n          <Avatar className={classes.avatar} src={avatar} alt=\"akhila\" />\n        </Grid>\n        <Typography className={classes.title} variant=\"h4\">\n          <span ref={el}></span>\n        </Typography>\n        <Typography className={classes.sub}>\n          <span ref={el2}></span>\n        </Typography>\n      </Box>\n    </>\n  );\n};\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}