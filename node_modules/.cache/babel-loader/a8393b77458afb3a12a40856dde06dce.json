{"ast":null,"code":"var _jsxFileName = \"/Users/akhila/lighthouse/portfolio/akhila499.github.io/src/components/Header.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Typography, Avatar, Grid, Box } from \"@material-ui/core\";\nimport avatar from \"../avatar.png\";\nimport Typed from \"typed.js\";\nimport { useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Header = () => {\n  _s();\n\n  const el = useRef(null);\n  const el2 = useRef(null);\n  useEffect(() => {\n    const typed = new Typed(el.current, {\n      strings: [\"Akhila Thota\"],\n      // Strings to display\n      // Speed settings, try diffrent values untill you get good results\n      startDelay: 300,\n      typeSpeed: 50,\n      backSpeed: 100,\n      backDelay: 100,\n      loop: true\n    });\n    const typed2 = new Typed(el2.current, {\n      strings: [\"Web Developer\", \"Front-end Developer\", \"fullstack Developer\"],\n      // Strings to display\n      // Speed settings, try diffrent values untill you get good results\n      startDelay: 300,\n      typeSpeed: 50,\n      backSpeed: 100,\n      backDelay: 100,\n      loop: true\n    }); // Destropying\n\n    return () => {\n      typed.destroy();\n      typed2.destroy();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        src: avatar,\n        alt: \"akhila\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          ref: el\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          ref: el2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Header, \"3tfef9+0Rk8FeQi9e4dJtg0kg1c=\");\n\n_c = Header;\nexport default Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/Users/akhila/lighthouse/portfolio/akhila499.github.io/src/components/Header.js"],"names":["React","Typography","Avatar","Grid","Box","avatar","Typed","useEffect","useRef","Header","el","el2","typed","current","strings","startDelay","typeSpeed","backSpeed","backDelay","loop","typed2","destroy"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,UADF,EAEEC,MAFF,EAGEC,IAHF,EAIEC,GAJF,QAKO,mBALP;AAMA,OAAOC,MAAP,MAAmB,eAAnB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAASC,SAAT,EAAoBC,MAApB,QAAkC,OAAlC;;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAMC,EAAE,GAAGF,MAAM,CAAC,IAAD,CAAjB;AACA,QAAMG,GAAG,GAAGH,MAAM,CAAC,IAAD,CAAlB;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMK,KAAK,GAAG,IAAIN,KAAJ,CAAUI,EAAE,CAACG,OAAb,EAAsB;AAClCC,MAAAA,OAAO,EAAE,CAAC,cAAD,CADyB;AACP;AAC3B;AACAC,MAAAA,UAAU,EAAE,GAHsB;AAIlCC,MAAAA,SAAS,EAAE,EAJuB;AAKlCC,MAAAA,SAAS,EAAE,GALuB;AAMlCC,MAAAA,SAAS,EAAE,GANuB;AAOlCC,MAAAA,IAAI,EAAE;AAP4B,KAAtB,CAAd;AASA,UAAMC,MAAM,GAAG,IAAId,KAAJ,CAAUK,GAAG,CAACE,OAAd,EAAuB;AACpCC,MAAAA,OAAO,EAAE,CAAC,eAAD,EAAkB,qBAAlB,EAAyC,qBAAzC,CAD2B;AACsC;AAC1E;AACAC,MAAAA,UAAU,EAAE,GAHwB;AAIpCC,MAAAA,SAAS,EAAE,EAJyB;AAKpCC,MAAAA,SAAS,EAAE,GALyB;AAMpCC,MAAAA,SAAS,EAAE,GANyB;AAOpCC,MAAAA,IAAI,EAAE;AAP8B,KAAvB,CAAf,CAVc,CAoBd;;AACA,WAAO,MAAM;AACXP,MAAAA,KAAK,CAACS,OAAN;AACAD,MAAAA,MAAM,CAACC,OAAP;AACD,KAHD;AAID,GAzBQ,EAyBN,EAzBM,CAAT;AA0BA,sBACE;AAAA,2BACE,QAAC,GAAD;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,GAAG,EAAEhB,MAAb;AAAqB,QAAA,GAAG,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAA,gCACE;AAAI,UAAA,GAAG,EAAEK;AAAT;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAM,UAAA,GAAG,EAAEC;AAAX;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAWD,CAxCD;;GAAMF,M;;KAAAA,M;AA0CN,eAAeA,MAAf","sourcesContent":["import React from 'react'\nimport {\n  Typography,\n  Avatar,\n  Grid,\n  Box\n} from \"@material-ui/core\";\nimport avatar from \"../avatar.png\";\nimport Typed from \"typed.js\";\nimport { useEffect, useRef } from 'react';\n\nconst Header = () => {\n  const el = useRef(null);\n  const el2 = useRef(null);\n  useEffect(() => {\n    const typed = new Typed(el.current, {\n      strings: [\"Akhila Thota\"], // Strings to display\n      // Speed settings, try diffrent values untill you get good results\n      startDelay: 300,\n      typeSpeed: 50,\n      backSpeed: 100,\n      backDelay: 100,\n      loop: true\n    });\n    const typed2 = new Typed(el2.current, {\n      strings: [\"Web Developer\", \"Front-end Developer\", \"fullstack Developer\"], // Strings to display\n      // Speed settings, try diffrent values untill you get good results\n      startDelay: 300,\n      typeSpeed: 50,\n      backSpeed: 100,\n      backDelay: 100,\n      loop: true\n    });\n\n    // Destropying\n    return () => {\n      typed.destroy();\n      typed2.destroy();\n    };\n  }, []);\n  return (\n    <>\n      <Box>\n        <Avatar src={avatar} alt=\"akhila\"/>\n        <Typography variant=\"h4\">\n          <h5 ref={el}></h5>\n          <span ref={el2}></span>\n        </Typography>\n      </Box>\n    </>\n  )\n}\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}