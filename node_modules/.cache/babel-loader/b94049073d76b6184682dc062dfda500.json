{"ast":null,"code":"var _jsxFileName = \"/Users/akhila/lighthouse/portfolio/akhila499.github.io/src/components/Header.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Typography, Avatar, Grid, Box } from \"@material-ui/core\";\nimport avatar from \"../avatar.png\";\nimport Typed from \"typed.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Header = () => {\n  _s();\n\n  const el = useRef(null);\n  useEffect(() => {\n    const typed = new Typed(el.current, {\n      strings: [\"Akhila Thota\", \"Web Developer\", \"Candy\", \"More Strings\"],\n      // Strings to display\n      // Speed settings, try diffrent values untill you get good results\n      startDelay: 300,\n      typeSpeed: 100,\n      backSpeed: 100,\n      backDelay: 100\n    }); // Destropying\n\n    return () => {\n      typed.destroy();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        src: avatar,\n        alt: \"akhila\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          ref: el\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Header, \"bH7R4hqe0oCFqrqYinS8ShQEwjI=\");\n\n_c = Header;\nexport default Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/Users/akhila/lighthouse/portfolio/akhila499.github.io/src/components/Header.js"],"names":["React","Typography","Avatar","Grid","Box","avatar","Typed","Header","el","useRef","useEffect","typed","current","strings","startDelay","typeSpeed","backSpeed","backDelay","destroy"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,UADF,EAEEC,MAFF,EAGEC,IAHF,EAIEC,GAJF,QAKO,mBALP;AAMA,OAAOC,MAAP,MAAmB,eAAnB;AACA,OAAOC,KAAP,MAAkB,UAAlB;;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAMC,EAAE,GAAGC,MAAM,CAAC,IAAD,CAAjB;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMC,KAAK,GAAG,IAAIL,KAAJ,CAAUE,EAAE,CAACI,OAAb,EAAsB;AAClCC,MAAAA,OAAO,EAAE,CAAC,cAAD,EAAiB,eAAjB,EAAkC,OAAlC,EAA2C,cAA3C,CADyB;AACmC;AACrE;AACAC,MAAAA,UAAU,EAAE,GAHsB;AAIlCC,MAAAA,SAAS,EAAE,GAJuB;AAKlCC,MAAAA,SAAS,EAAE,GALuB;AAMlCC,MAAAA,SAAS,EAAE;AANuB,KAAtB,CAAd,CADc,CAUd;;AACA,WAAO,MAAM;AACXN,MAAAA,KAAK,CAACO,OAAN;AACD,KAFD;AAGD,GAdQ,EAcN,EAdM,CAAT;AAeA,sBACE;AAAA,2BACE,QAAC,GAAD;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,GAAG,EAAEb,MAAb;AAAqB,QAAA,GAAG,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAA,+BACE;AAAM,UAAA,GAAG,EAAEG;AAAX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAUD,CA3BD;;GAAMD,M;;KAAAA,M;AA6BN,eAAeA,MAAf","sourcesContent":["import React from 'react'\nimport {\n  Typography,\n  Avatar,\n  Grid,\n  Box\n} from \"@material-ui/core\";\nimport avatar from \"../avatar.png\";\nimport Typed from \"typed.js\";\n\nconst Header = () => {\n  const el = useRef(null);\n  useEffect(() => {\n    const typed = new Typed(el.current, {\n      strings: [\"Akhila Thota\", \"Web Developer\", \"Candy\", \"More Strings\"], // Strings to display\n      // Speed settings, try diffrent values untill you get good results\n      startDelay: 300,\n      typeSpeed: 100,\n      backSpeed: 100,\n      backDelay: 100\n    });\n\n    // Destropying\n    return () => {\n      typed.destroy();\n    };\n  }, []);\n  return (\n    <>\n      <Box>\n        <Avatar src={avatar} alt=\"akhila\"/>\n        <Typography variant=\"h4\">\n          <span ref={el}></span>\n        </Typography>\n      </Box>\n    </>\n  )\n}\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}